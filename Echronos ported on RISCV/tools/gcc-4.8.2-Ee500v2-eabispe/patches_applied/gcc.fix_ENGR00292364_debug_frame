# Problem Statement:
  For C++ applications, built with GCC v4.8.1, the CodeWarrior debugger
  is not able to properly display the local variables because the frame
  information is not generated in .debug_frame section as required by
  the DWARF standard.

  However, the compiler does emit the frame information but to avoid
  duplication of information, by default, the GCC v4.8.1 generates the
  frame information only in .eh_frame section, which is the more compact
  form compared to .debug_frame section, with few additional details.

# Reported by:
  Hoang Tu

# Owned by:
  Ram

# Action:
  * Along with the .eh_frame section, changes are made in compiler DWARF
    emission to generate the frame information in .debug_frame section also
  * Added a new compiler flag '-fdebug-unwind-tables', which is disabled
    by default in the compiler, to enable/disable the above changes


diff -ruN gcc-4.8.1/gcc/common.opt gcc-4.8.1_ENGR00292364_Fix/gcc/common.opt
--- gcc-4.8.1/gcc/common.opt	2014-02-17 09:24:10.067382984 -0600
+++ gcc-4.8.1_ENGR00292364_Fix/gcc/common.opt	2014-02-19 01:15:49.656381305 -0600
@@ -984,6 +984,10 @@
 Common Report Var(flag_debug_types_section) Init(0)
 Output .debug_types section when using DWARF v4 debuginfo.
 
+fdebug-unwind-tables
+Common Report Var(flag_debug_unwind_tables) Init(0)
+Generate unwind tables in .debug_frame also, when exception unwind tables enabled
+
 ; Nonzero for -fdefer-pop: don't pop args after each function call
 ; instead save them up to pop many calls' args with one insns.
 fdefer-pop
diff -ruN gcc-4.8.1/gcc/dwarf2out.c gcc-4.8.1_ENGR00292364_Fix/gcc/dwarf2out.c
--- gcc-4.8.1/gcc/dwarf2out.c	2014-02-17 09:24:31.621383000 -0600
+++ gcc-4.8.1_ENGR00292364_Fix/gcc/dwarf2out.c	2014-02-19 01:27:19.453383000 -0600
@@ -21750,10 +21750,17 @@
 dwarf2out_assembly_start (void)
 {
   if (HAVE_GAS_CFI_SECTIONS_DIRECTIVE
-      && dwarf2out_do_cfi_asm ()
-      && (!(flag_unwind_tables || flag_exceptions)
-	  || targetm_common.except_unwind_info (&global_options) != UI_DWARF2))
-    fprintf (asm_out_file, "\t.cfi_sections\t.debug_frame\n");
+      && dwarf2out_do_cfi_asm ())
+    {
+      if (!(flag_unwind_tables || flag_exceptions)
+	  || targetm_common.except_unwind_info (&global_options) != UI_DWARF2)
+        fprintf (asm_out_file, "\t.cfi_sections\t.debug_frame\n");
+
+      if (flag_debug_unwind_tables
+          && (flag_unwind_tables || flag_exceptions)
+          && targetm_common.except_unwind_info (&global_options) == UI_DWARF2)
+        fprintf (asm_out_file, "\t.cfi_sections\t.eh_frame, .debug_frame\n");
+    }
 }
 
 /* A helper function for dwarf2out_finish called through
